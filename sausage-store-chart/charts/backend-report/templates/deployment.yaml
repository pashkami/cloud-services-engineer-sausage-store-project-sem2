---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-report-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: sausage-backend-report
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: backend-report
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.global.environment }}"
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.strategy.type }}
  selector:
    matchLabels:
      app.kubernetes.io/name: sausage-backend-report
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sausage-backend-report
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        app.kubernetes.io/component: backend-report
        app.kubernetes.io/part-of: sausage-store
        env: "{{ .Values.global.environment }}"
    spec:
      containers:
      - name: backend-report
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.containerPort }}
          protocol: TCP
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: backend-report-{{ .Release.Name }}
              key: PORT
        - name: DB
          valueFrom:
            secretKeyRef:
              name: backend-report-{{ .Release.Name }}
              key: DB
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3 